<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="5" name="Eprover" version="2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Z3" version="4.7.1" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="8" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<file proved="true">
<path name=".."/>
<path name="ringdecision.mlw"/>
<theory name="UnitaryCommutativeRingDecision" proved="true">
 <goal name="VC mon_append" expl="VC for mon_append" proved="true">
 <proof prover="7"><result status="valid" time="0.02" steps="115"/></proof>
 </goal>
 <goal name="interp_nil" proved="true">
 <proof prover="7"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="interp_cons" proved="true">
 <transf name="compute_in_goal" proved="true" >
  <goal name="interp_cons.0" proved="true">
  <proof prover="7"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp_sum" expl="VC for interp_sum" proved="true">
 <proof prover="7"><result status="valid" time="0.02" steps="123"/></proof>
 </goal>
 <goal name="VC append_mon" expl="VC for append_mon" proved="true">
 <proof prover="8" timelimit="5"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="VC mul_mon" expl="VC for mul_mon" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mul_mon.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="VC mul_mon.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_devel" expl="VC for mul_devel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mul_devel.0" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC mul_devel.0.0" expl="postcondition" proved="true">
   <proof prover="5" memlimit="2000"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC mul_devel.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC conv" expl="VC for conv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC conv.0" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC conv.0.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="0.25" steps="299"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC conv.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC conv.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC conv.3" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC conv.3.0" expl="postcondition" proved="true">
   <proof prover="7"><result status="valid" time="0.03" steps="109"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC insert" expl="VC for insert" proved="true">
 <proof prover="7"><result status="valid" time="0.03" steps="209"/></proof>
 </goal>
 <goal name="VC insertion_sort" expl="VC for insertion_sort" proved="true">
 <proof prover="7"><result status="valid" time="0.02" steps="122"/></proof>
 </goal>
 <goal name="VC sort_mon" expl="VC for sort_mon" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sort_mon.0" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC sort_mon.0.0" expl="postcondition" proved="true">
   <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="38"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC sort_mons" expl="VC for sort_mons" proved="true">
 <proof prover="7"><result status="valid" time="0.02" steps="167"/></proof>
 </goal>
 <goal name="VC same" expl="VC for same" proved="true">
 <proof prover="7" timelimit="15" memlimit="2000"><result status="valid" time="0.02" steps="149"/></proof>
 </goal>
 <goal name="squash_sum" proved="true">
 <proof prover="8"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="VC squash_append" expl="VC for squash_append" proved="true">
 <proof prover="7" timelimit="15" memlimit="2000"><result status="valid" time="1.20" steps="652"/></proof>
 </goal>
 <goal name="VC insert_mon" expl="VC for insert_mon" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC insert_mon.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC insert_mon.0.0" expl="assertion" proved="true">
   <transf name="generalize_introduced" proved="true" >
    <goal name="VC insert_mon.0.0.0" expl="assertion" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="VC insert_mon.0.0.0.0" expl="assertion" proved="true">
     <proof prover="5"><result status="valid" time="0.18"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC insert_mon.0.1" expl="VC for insert_mon" proved="true">
   <proof prover="8"><result status="valid" time="0.05"/></proof>
   </goal>
   <goal name="VC insert_mon.0.2" expl="VC for insert_mon" proved="true">
   <proof prover="8"><result status="valid" time="0.06"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC insert_mon.1" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC insert_mon.2" expl="postcondition" proved="true">
  <transf name="generalize_introduced" proved="true" >
   <goal name="VC insert_mon.2.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="0.28"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC insertion_sort_mon" expl="VC for insertion_sort_mon" proved="true">
 <proof prover="7" timelimit="15" memlimit="2000"><result status="valid" time="0.02" steps="192"/></proof>
 </goal>
 <goal name="VC normalize" expl="VC for normalize" proved="true">
 <proof prover="7" timelimit="15" memlimit="2000"><result status="valid" time="0.01" steps="60"/></proof>
 </goal>
 <goal name="norm&#39;" proved="true">
 <proof prover="6" timelimit="1"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="norm" proved="true">
 <proof prover="7" timelimit="15" memlimit="2000"><result status="valid" time="0.02" steps="64"/></proof>
 </goal>
</theory>
<theory name="Tests" proved="true">
 <goal name="C.Assoc" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.Unit_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="C.Unit_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.Inv_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.Inv_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.Comm" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="C.MulAssoc.Assoc" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.Mul_distr_l" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="C.Mul_distr_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="C.MulComm.Comm" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="C.Unitary" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="C.NonTrivialRing" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="Z.Assoc" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.Unit_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.Unit_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="Z.Inv_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.Inv_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="Z.Comm" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.MulAssoc.Assoc" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="Z.Mul_distr_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.Mul_distr_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.MulComm.Comm" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.Unitary" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="Z.NonTrivialRing" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="morph_zero" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="morph_one" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="morph_add" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="morph_mul" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="morph_inv" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="VC eq0" expl="VC for eq0" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="g" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="g.0" proved="true">
  <transf name="reflection_l" proved="true" arg1="norm">
   <goal name="g.0.0" expl="reification check" proved="true">
   <proof prover="5" memlimit="2000"><result status="valid" time="0.02"/></proof>
   <proof prover="8"><result status="valid" time="0.02"/></proof>
   </goal>
   <goal name="g.0.1" expl="asserted formula" proved="true">
   <transf name="compute_in_goal" proved="true" >
    <goal name="g.0.1.0" expl="asserted formula" proved="true">
    <proof prover="6" timelimit="1"><result status="valid" time="0.02"/></proof>
    <proof prover="8"><result status="valid" time="0.03"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="AssocAlgebraDecision" proved="true">
 <goal name="ext_minone" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="ext_minone.0" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mon_append" expl="VC for mon_append" proved="true">
 <proof prover="5"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="interp_cons" proved="true">
 <proof prover="5"><result status="valid" time="0.50"/></proof>
 </goal>
 <goal name="VC interp_sum" expl="VC for interp_sum" proved="true">
 <proof prover="7"><result status="valid" time="0.03" steps="151"/></proof>
 </goal>
 <goal name="VC append_mon" expl="VC for append_mon" proved="true">
 <proof prover="8" timelimit="5"><result status="valid" time="0.09"/></proof>
 </goal>
 <goal name="VC mul_mon" expl="VC for mul_mon" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mul_mon.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC mul_mon.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC mul_devel" expl="VC for mul_devel" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC mul_devel.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC mul_devel.1" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ext" expl="VC for ext" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ext.0" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC ext.1" expl="postcondition" proved="true">
  <proof prover="8" timelimit="5"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="ext_sub" proved="true">
 <proof prover="7"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="VC conv" expl="VC for conv" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC conv.0" expl="postcondition" proved="true">
  <transf name="compute_in_goal" proved="true" >
   <goal name="VC conv.0.0" expl="postcondition" proved="true">
   <proof prover="7" timelimit="1"><result status="valid" time="0.04" steps="142"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC conv.1" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC conv.2" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC conv.3" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC conv.4" expl="postcondition" proved="true">
  <proof prover="8"><result status="valid" time="0.04"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC same" expl="VC for same" proved="true">
 <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="120"/></proof>
 </goal>
 <goal name="squash_append" proved="true">
 <proof prover="8" timelimit="5" memlimit="2000"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC insert_mon" expl="VC for insert_mon" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC insert_mon.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC insert_mon.0.0" expl="assertion" proved="true">
   <transf name="generalize_introduced" proved="true" >
    <goal name="VC insert_mon.0.0.0" expl="assertion" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="VC insert_mon.0.0.0.0" expl="assertion" proved="true">
     <proof prover="5"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC insert_mon.0.1" expl="VC for insert_mon" proved="true">
   <proof prover="8"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC insert_mon.0.2" expl="VC for insert_mon" proved="true">
   <proof prover="8"><result status="valid" time="0.05"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC insert_mon.1" expl="variant decrease" proved="true">
  <proof prover="8"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC insert_mon.2" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC insert_mon.2.0" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC insert_mon.2.1" expl="postcondition" proved="true">
   <proof prover="8"><result status="valid" time="0.19"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC insertion_sort_mon" expl="VC for insertion_sort_mon" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC insertion_sort_mon.0" expl="variant decrease" proved="true">
  <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="VC insertion_sort_mon.1" expl="postcondition" proved="true">
  <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="143"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC normalize&#39;" expl="VC for normalize&#39;" proved="true">
 <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="VC normalize" expl="VC for normalize" proved="true">
 <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="VC norm" expl="VC for norm" proved="true">
 <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="60"/></proof>
 </goal>
 <goal name="VC norm&#39;" expl="VC for norm&#39;" proved="true">
 <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="54"/></proof>
 </goal>
 <goal name="VC norm_f" expl="VC for norm_f" proved="true">
 <transf name="split_goal_right" proved="true" >
  <goal name="VC norm_f.0" expl="postcondition" proved="true">
  <proof prover="8" timelimit="10" memlimit="4000"><result status="valid" time="0.16"/></proof>
  </goal>
  <goal name="VC norm_f.1" expl="postcondition" proved="true">
  <proof prover="7" timelimit="1"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="ReifyTests" proved="true">
 <goal name="R.Assoc" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="R.Unit_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.Unit_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.Inv_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.Inv_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.Comm" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.MulAssoc.Assoc" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.Mul_distr_l" proved="true">
 <proof prover="8"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="R.Mul_distr_r" proved="true">
 <proof prover="8"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="R.MulComm.Comm" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.Unitary" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="R.NonTrivialRing" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="A.Assoc" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="A.Unit_def_l" proved="true">
 <proof prover="6"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="A.Unit_def_r" proved="true">
 <proof prover="6"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="A.Inv_def_l" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="A.Inv_def_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="A.Comm" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="A.MulAssoc.Assoc" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="A.Mul_distr_l" proved="true">
 <proof prover="8"><result status="valid" time="0.00"/></proof>
 </goal>
 <goal name="A.Mul_distr_r" proved="true">
 <proof prover="8"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="AUnitary" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="ANonTrivial" proved="true">
 <proof prover="6"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="ExtDistSumA" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="ExtDistSumR" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="AssocMulExt" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="UnitExt" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="CommMulExt" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC eq0" expl="VC for eq0" proved="true">
 <proof prover="7"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="g" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="g.0" proved="true">
  <transf name="reflection_l" proved="true" arg1="norm">
   <goal name="g.0.0" expl="reification check" proved="true">
   <proof prover="7" memlimit="2000"><result status="valid" time="0.01" steps="15"/></proof>
   </goal>
   <goal name="g.0.1" expl="asserted formula" proved="true">
   <transf name="split_goal_right" proved="true" >
    <goal name="g.0.1.0" proved="true">
    <transf name="compute_in_goal" proved="true" >
     <goal name="g.0.1.0.0" proved="true">
     <proof prover="7" memlimit="2000"><result status="valid" time="0.00" steps="12"/></proof>
     </goal>
    </transf>
    </goal>
    <goal name="g.0.1.1" proved="true">
    <proof prover="7" memlimit="2000"><result status="valid" time="0.02" steps="14"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="h" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="h.0" proved="true">
  <transf name="reflection_l" proved="true" arg1="norm">
   <goal name="h.0.0" expl="reification check" proved="true">
   <proof prover="7" memlimit="2000"><result status="valid" time="0.02" steps="15"/></proof>
   </goal>
   <goal name="h.0.1" expl="asserted formula" proved="true">
   <proof prover="7" memlimit="2000"><result status="valid" time="0.02" steps="103"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
